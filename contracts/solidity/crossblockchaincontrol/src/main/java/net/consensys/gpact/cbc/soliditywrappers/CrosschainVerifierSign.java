package net.consensys.gpact.cbc.soliditywrappers;

import java.math.BigInteger;
import java.util.Arrays;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.5-SNAPSHOT.
 */
@SuppressWarnings("rawtypes")
public class CrosschainVerifierSign extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b5060405161125b38038061125b83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6111c8806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634c1ce90214610030575b600080fd5b61004361003e366004610ed3565b610059565b6040516100509190611011565b60405180910390f35b60408051808201909152600081526060602082015260006100b76100b287878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061034492505050565b610393565b60408051808201909152600081526060602082015290915060006100fe6100f7846000815181106100ea576100ea611166565b6020026020010151610474565b60006104f1565b9050808a146101655760405162461bcd60e51b815260206004820152602860248201527f4576656e74206e6f7420656d697474656420627920657870656374656420626c60448201526737b1b5b1b430b4b760c11b60648201526084015b60405180910390fd5b61018561017e846001815181106100ea576100ea611166565b6014015190565b6001600160a01b0316825282516000906101b7906101b090869060029081106100ea576100ea611166565b6000610557565b9050808a1461021d5760405162461bcd60e51b815260206004820152602c60248201527f4576656e7420646f6573206e6f7420686176652065787065637465642065766560448201526b6e74207369676e617475726560a01b606482015260840161015c565b610233846003815181106100ea576100ea611166565b83602001819052506102af8b8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b90819084018382808284376000920191909152506105bc92505050565b6000548351604051633067140960e11b8152600481018e90526001600160a01b0391821660248201529116906360ce28129060440160206040518083038186803b1580156102fc57600080fd5b505afa158015610310573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103349190610eaa565b50919a9950505050505050505050565b604080518082019091526000808252602082015281518061037a5750506040805180820190915260008082526020820152919050565b6040805180820190915260209384018152928301525090565b606061039e82610a35565b6103a757600080fd5b60006103b283610a5c565b90508067ffffffffffffffff8111156103cd576103cd61117c565b60405190808252806020026020018201604052801561041257816020015b60408051808201909152600080825260208201528152602001906001900390816103eb5790505b509150600061042084610aee565b905060005b61042e82610b49565b1561046c5761043c82610b6d565b84828151811061044e5761044e611166565b6020026020010181905250808061046490611135565b915050610425565b505050919050565b606061047f82610bc7565b61048857600080fd5b60008061049484610bed565b90925090508067ffffffffffffffff8111156104b2576104b261117c565b6040519080825280601f01601f1916602001820160405280156104dc576020820181803683370190505b5092506104ea828483610c91565b5050919050565b60006104fe8260206110e7565b8351101561054e5760405162461bcd60e51b815260206004820152601e60248201527f736c6963696e67206f7574206f662072616e6765202875696e74323536290000604482015260640161015c565b50016020015190565b60008060005b60208110156105b4576105718160086110ff565b8561057c83876110e7565b8151811061058c5761058c611166565b01602001516001600160f81b031916901c9190911790806105ac81611135565b91505061055d565b509392505050565b60608060608060006105d06100b287610344565b905060006105f7826000815181106105ea576105ea611166565b6020026020010151610393565b80519091508067ffffffffffffffff8111156106155761061561117c565b60405190808252806020026020018201604052801561063e578160200160208202803683370190505b5096506000610659846001815181106105ea576105ea611166565b90508167ffffffffffffffff8111156106745761067461117c565b60405190808252806020026020018201604052801561069d578160200160208202803683370190505b50965060006106b8856002815181106105ea576105ea611166565b90508267ffffffffffffffff8111156106d3576106d361117c565b6040519080825280602002602001820160405280156106fc578160200160208202803683370190505b5096506000610717866003815181106105ea576105ea611166565b90508367ffffffffffffffff8111156107325761073261117c565b60405190808252806020026020018201604052801561075b578160200160208202803683370190505b509650885184146107c05760405162461bcd60e51b815260206004820152602960248201527f4c656e677468206f66207369675220616e64207369676e65727320646f6573206044820152680dcdee840dac2e8c6d60bb1b606482015260840161015c565b875184146108225760405162461bcd60e51b815260206004820152602960248201527f4c656e677468206f66207369675320616e64207369676e65727320646f6573206044820152680dcdee840dac2e8c6d60bb1b606482015260840161015c565b865184146108845760405162461bcd60e51b815260206004820152602960248201527f4c656e677468206f66207369675620616e64207369676e65727320646f6573206044820152680dcdee840dac2e8c6d60bb1b606482015260840161015c565b60005b8481101561099a576108a761017e8783815181106100ea576100ea611166565b8b82815181106108b9576108b9611166565b60200260200101906001600160a01b031690816001600160a01b0316815250506108f16101b08583815181106100ea576100ea611166565b8a828151811061090357610903611166565b6020026020010181815250506109276101b08483815181106100ea576100ea611166565b89828151811061093957610939611166565b60200260200101818152505061096461095d8383815181106100ea576100ea611166565b6000610ccf565b88828151811061097657610976611166565b60ff909216602092830291909101909101528061099281611135565b915050610887565b505060005460405163ea13ec8b60e01b81526001600160a01b03909116955063ea13ec8b94506109db93508c92508991508890889088908e9060040161103e565b60206040518083038186803b1580156109f357600080fd5b505afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190610eaa565b5050505050505050565b6000816020015160001415610a4c57506000919050565b50515160c060009190911a101590565b6000610a6782610a35565b610a7357506000919050565b81518051600090811a9190610a8785610d35565b610a9190836110e7565b905060006001866020015184610aa791906110e7565b610ab1919061111e565b905060005b818311610ae457610ac683610dc3565b610ad090846110e7565b925080610adc81611135565b915050610ab6565b9695505050505050565b6040805160808101825260009181018281526060820183905281526020810191909152610b1a82610a35565b610b2357600080fd5b6000610b2e83610d35565b8351610b3a91906110e7565b92825250602081019190915290565b80516020810151815160009291610b5f916110e7565b836020015110915050919050565b6040805180820190915260008082526020820152610b8a82610b49565b1561002b5760208201516000610b9f82610dc3565b828452602084018190529050610bb581836110e7565b602085015250610bc29050565b919050565b6000816020015160001415610bde57506000919050565b50515160c060009190911a1090565b600080610bf983610bc7565b610c0257600080fd5b8251805160001a906080821015610c1e57946001945092505050565b60b8821015610c4c5760018560200151610c38919061111e565b9250610c458160016110e7565b9350610c8a565b602085015160b6198301908190610c659060019061111e565b610c6f919061111e565b9350610c7b81836110e7565b610c869060016110e7565b9450505b5050915091565b6020601f820104836020840160005b83811015610cbc57602081028381015190830152600101610ca0565b5050505060008251602001830152505050565b6000610cdc8260016110e7565b83511015610d2c5760405162461bcd60e51b815260206004820152601c60248201527f736c6963696e67206f7574206f662072616e6765202875696e74382900000000604482015260640161015c565b50016001015190565b6000816020015160001415610d4c57506000919050565b8151805160001a906080821015610d67575060009392505050565b60b8821080610d82575060c08210158015610d82575060f882105b15610d91575060019392505050565b60c0821015610db857610da560b78361111e565b610db09060016110e7565b949350505050565b610da560f78361111e565b8051600090811a6080811015610ddc5760019150610e5b565b60b8811015610e0257610df060808261111e565b610dfb9060016110e7565b9150610e5b565b60c0811015610e2b57600183015160b76020839003016101000a9004810160b519019150610e5b565b60f8811015610e3f57610df060c08261111e565b600183015160f76020839003016101000a9004810160f5190191505b50919050565b60008083601f840112610e7357600080fd5b50813567ffffffffffffffff811115610e8b57600080fd5b602083019150836020828501011115610ea357600080fd5b9250929050565b600060208284031215610ebc57600080fd5b81518015158114610ecc57600080fd5b9392505050565b60008060008060008060808789031215610eec57600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115610f1257600080fd5b610f1e8a838b01610e61565b90965094506060890135915080821115610f3757600080fd5b50610f4489828a01610e61565b979a9699509497509295939492505050565b600081518084526020808501945080840160005b83811015610f8657815187529582019590820190600101610f6a565b509495945050505050565b600081518084526020808501945080840160005b83811015610f8657815160ff1687529582019590820190600101610fa5565b6000815180845260005b81811015610fea57602081850181015186830182015201610fce565b81811115610ffc576000602083870101525b50601f01601f19169290920160200192915050565b602080825282516001600160a01b031682820152820151604080830152600090610db06060840182610fc4565b600060c08201888352602060c08185015281895180845260e086019150828b01935060005b818110156110885784516001600160a01b031683529383019391830191600101611063565b5050848103604086015261109c818a610f56565b9250505082810360608401526110b28187610f56565b905082810360808401526110c68186610f91565b905082810360a08401526110da8185610fc4565b9998505050505050505050565b600082198211156110fa576110fa611150565b500190565b600081600019048311821515161561111957611119611150565b500290565b60008282101561113057611130611150565b500390565b600060001982141561114957611149611150565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220fcbacc637276d9df3da820a505b22f0f40e4fe4fd419a3f5ae9bebf5423dc30464736f6c63430008050033";

    public static final String FUNC_DECODEANDVERIFYEVENT = "decodeAndVerifyEvent";

    @Deprecated
    protected CrosschainVerifierSign(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CrosschainVerifierSign(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CrosschainVerifierSign(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CrosschainVerifierSign(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<EventInfo> decodeAndVerifyEvent(BigInteger _expectedBlockchainId, byte[] _expectedEventSignature, byte[] _signedEventInfo, byte[] _signature) {
        final Function function = new Function(FUNC_DECODEANDVERIFYEVENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_expectedBlockchainId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_expectedEventSignature), 
                new org.web3j.abi.datatypes.DynamicBytes(_signedEventInfo), 
                new org.web3j.abi.datatypes.DynamicBytes(_signature)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<EventInfo>() {}));
        return executeRemoteCallSingleValueReturn(function, EventInfo.class);
    }

    @Deprecated
    public static CrosschainVerifierSign load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainVerifierSign(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CrosschainVerifierSign load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainVerifierSign(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CrosschainVerifierSign load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CrosschainVerifierSign(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CrosschainVerifierSign load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CrosschainVerifierSign(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CrosschainVerifierSign> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _registrar) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar)));
        return deployRemoteCall(CrosschainVerifierSign.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<CrosschainVerifierSign> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _registrar) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar)));
        return deployRemoteCall(CrosschainVerifierSign.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainVerifierSign> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _registrar) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar)));
        return deployRemoteCall(CrosschainVerifierSign.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainVerifierSign> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _registrar) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar)));
        return deployRemoteCall(CrosschainVerifierSign.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class EventInfo extends DynamicStruct {
        public String cbcContract;

        public byte[] eventData;

        public EventInfo(String cbcContract, byte[] eventData) {
            super(new org.web3j.abi.datatypes.Address(cbcContract),new org.web3j.abi.datatypes.DynamicBytes(eventData));
            this.cbcContract = cbcContract;
            this.eventData = eventData;
        }

        public EventInfo(Address cbcContract, DynamicBytes eventData) {
            super(cbcContract,eventData);
            this.cbcContract = cbcContract.getValue();
            this.eventData = eventData.getValue();
        }
    }
}
