package net.consensys.gpact.cbc.soliditywrappers;

import java.math.BigInteger;
import java.util.Arrays;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.5-SNAPSHOT.
 */
@SuppressWarnings("rawtypes")
public class CrosschainVerifierTxRoot extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b5060405161126138038061126183398101604081905261002f9161007c565b600180546001600160a01b039384166001600160a01b031991821617909155600080549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b6111a3806100be6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634c1ce90214610030575b600080fd5b61004361003e366004610ed8565b610045565b005b6001546040516303e04ced60e11b8152600481018890526000916001600160a01b0316906307c099da9060240160206040518083038186803b15801561008a57600080fd5b505afa15801561009e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c29190610e86565b9050600061010584848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061033692505050565b600054815160208301516040808501516060860151608087015160a0880151935163917ede9960e01b81529798506001600160a01b039096169663917ede99966101559695949091600401610fcd565b60206040518083038186803b15801561016d57600080fd5b505afa158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a59190610eb6565b508051881461020c5760405162461bcd60e51b815260206004820152602860248201527f4576656e74206e6f7420656d697474656420627920657870656374656420626c60448201526737b1b5b1b430b4b760c11b60648201526084015b60405180910390fd5b600061022361021e8360600151610606565b610655565b9050600061024a8260018151811061023d5761023d611141565b6020026020010151610736565b9050606061025d84602001518b846107b3565b6020808701516040519294506000935061027d928f928f91879101610f87565b60408051601f198184030181526020601f8d018190048102840181019092528b835292506102c79183918d908d908190840183828082843760009201919091525061091e92505050565b6103285760405162461bcd60e51b815260206004820152602c60248201527f4578706563746564206576656e7420646f6573206e6f74206d6174636820657660448201526b32b73a1034b710383937b7b360a11b6064820152608401610203565b505050505050505050505050565b6040805160c08101825260008082526020820181905291810182905260608082018190526080820181905260a08201529061037361021e84610606565b905060006103976103908360008151811061023d5761023d611141565b600061094b565b905060006103bb6103b48460018151811061023d5761023d611141565b6014015190565b905060006103df6103d88560028151811061023d5761023d611141565b60006109b1565b905060006103f98560038151811061023d5761023d611141565b905060006104208660048151811061041357610413611141565b6020026020010151610655565b9050600061043a8760058151811061041357610413611141565b905080518251146104a85760405162461bcd60e51b815260206004820152603260248201527f4c656e677468206f662070726f6f664f66667365747320646f6573206e6f742060448201527136b0ba31b4103632b733ba3410383937b7b360711b6064820152608401610203565b6000825167ffffffffffffffff8111156104c4576104c4611157565b6040519080825280602002602001820160405280156104ed578160200160208202803683370190505b5090506000825167ffffffffffffffff81111561050c5761050c611157565b60405190808252806020026020018201604052801561053f57816020015b606081526020019060019003908161052a5790505b50905060005b83518110156105c95761056661039086838151811061023d5761023d611141565b83828151811061057857610578611141565b60200260200101818152505061059984828151811061023d5761023d611141565b8282815181106105ab576105ab611141565b602002602001018190525080806105c190611110565b915050610545565b506040805160c0810182529889526001600160a01b0390971660208901529587019490945250506060840152608083015260a08201529392505050565b604080518082019091526000808252602082015281518061063c5750506040805180820190915260008082526020820152919050565b6040805180820190915260209384018152928301525090565b606061066082610a16565b61066957600080fd5b600061067483610a3d565b90508067ffffffffffffffff81111561068f5761068f611157565b6040519080825280602002602001820160405280156106d457816020015b60408051808201909152600080825260208201528152602001906001900390816106ad5790505b50915060006106e284610acf565b905060005b6106f082610b2a565b1561072e576106fe82610b4e565b84828151811061071057610710611141565b6020026020010181905250808061072690611110565b9150506106e7565b505050919050565b606061074182610ba8565b61074a57600080fd5b60008061075684610bce565b90925090508067ffffffffffffffff81111561077457610774611157565b6040519080825280601f01601f19166020018201604052801561079e576020820181803683370190505b5092506107ac828483610c72565b5050919050565b60608060006107c461021e85610606565b905060006107de8260038151811061041357610413611141565b905060005b81518110156108bf57600061080383838151811061041357610413611141565b905060006108206103b48360008151811061023d5761023d611141565b90506108388260018151811061041357610413611141565b96506108508260028151811061023d5761023d611141565b955060006108778860008151811061086a5761086a611141565b6020026020010151610cb0565b9050898114801561089957508a6001600160a01b0316826001600160a01b0316145b156108a957505050505050610916565b50505080806108b790611110565b9150506107e3565b5060405162461bcd60e51b815260206004820152602560248201527f4e6f206576656e7420666f756e6420696e207472616e73616374696f6e20726560448201526418d95a5c1d60da1b6064820152608401610203565b935093915050565b6000815183511461093157506000610945565b818051906020012083805190602001201490505b92915050565b6000610958826020611092565b835110156109a85760405162461bcd60e51b815260206004820152601e60248201527f736c6963696e67206f7574206f662072616e6765202875696e743235362900006044820152606401610203565b50016020015190565b60008060005b6020811015610a0e576109cb8160086110aa565b856109d68387611092565b815181106109e6576109e6611141565b01602001516001600160f81b031916901c919091179080610a0681611110565b9150506109b7565b509392505050565b6000816020015160001415610a2d57506000919050565b50515160c060009190911a101590565b6000610a4882610a16565b610a5457506000919050565b81518051600090811a9190610a6885610cbb565b610a729083611092565b905060006001866020015184610a889190611092565b610a9291906110c9565b905060005b818311610ac557610aa783610d49565b610ab19084611092565b925080610abd81611110565b915050610a97565b9695505050505050565b6040805160808101825260009181018281526060820183905281526020810191909152610afb82610a16565b610b0457600080fd5b6000610b0f83610cbb565b8351610b1b9190611092565b92825250602081019190915290565b80516020810151815160009291610b4091611092565b836020015110915050919050565b6040805180820190915260008082526020820152610b6b82610b2a565b1561002b5760208201516000610b8082610d49565b828452602084018190529050610b968183611092565b602085015250610ba39050565b919050565b6000816020015160001415610bbf57506000919050565b50515160c060009190911a1090565b600080610bda83610ba8565b610be357600080fd5b8251805160001a906080821015610bff57946001945092505050565b60b8821015610c2d5760018560200151610c1991906110c9565b9250610c26816001611092565b9350610c6b565b602085015160b6198301908190610c46906001906110c9565b610c5091906110c9565b9350610c5c8183611092565b610c67906001611092565b9450505b5050915091565b6020601f820104836020840160005b83811015610c9d57602081028381015190830152600101610c81565b5050505060008251602001830152505050565b600061094582610de7565b6000816020015160001415610cd257506000919050565b8151805160001a906080821015610ced575060009392505050565b60b8821080610d08575060c08210158015610d08575060f882105b15610d17575060019392505050565b60c0821015610d3e57610d2b60b7836110c9565b610d36906001611092565b949350505050565b610d2b60f7836110c9565b8051600090811a6080811015610d625760019150610de1565b60b8811015610d8857610d766080826110c9565b610d81906001611092565b9150610de1565b60c0811015610db157600183015160b76020839003016101000a9004810160b519019150610de1565b60f8811015610dc557610d7660c0826110c9565b600183015160f76020839003016101000a9004810160f5190191505b50919050565b6000610df282610ba8565b610dfb57600080fd5b600080610e0784610bce565b90925090506020811115610e1a57600080fd5b80610e29575060009392505050565b806020036101000a82510492505050919050565b60008083601f840112610e4f57600080fd5b50813567ffffffffffffffff811115610e6757600080fd5b602083019150836020828501011115610e7f57600080fd5b9250929050565b600060208284031215610e9857600080fd5b81516001600160a01b0381168114610eaf57600080fd5b9392505050565b600060208284031215610ec857600080fd5b81518015158114610eaf57600080fd5b60008060008060008060808789031215610ef157600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115610f1757600080fd5b610f238a838b01610e3d565b90965094506060890135915080821115610f3c57600080fd5b50610f4989828a01610e3d565b979a9699509497509295939492505050565b60008151808452610f738160208601602086016110e0565b601f01601f19169290920160200192915050565b8481526bffffffffffffffffffffffff198460601b16602082015282603482015260008251610fbd8160548501602087016110e0565b9190910160540195945050505050565b8681526000602060018060a01b0388168184015286604084015260c06060840152610ffb60c0840187610f5b565b838103608085015285518082528287019183019060005b8181101561102e57835183529284019291840191600101611012565b505084810360a086015285518082528382019250600581901b8201840184880160005b8381101561107f57601f1985840301865261106d838351610f5b565b95870195925090860190600101611051565b50909d9c50505050505050505050505050565b600082198211156110a5576110a561112b565b500190565b60008160001904831182151516156110c4576110c461112b565b500290565b6000828210156110db576110db61112b565b500390565b60005b838110156110fb5781810151838201526020016110e3565b8381111561110a576000848401525b50505050565b60006000198214156111245761112461112b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212203115bedc24fa06433d744fe8fad7863d383e55a5b736a7a374b10615ecc4305164736f6c63430008050033";

    public static final String FUNC_DECODEANDVERIFYEVENT = "decodeAndVerifyEvent";

    @Deprecated
    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    @Deprecated
    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _registrar, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar), 
                new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _registrar, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar), 
                new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _registrar, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar), 
                new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _registrar, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar), 
                new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
