package net.consensys.gpact.cbc.soliditywrappers;

import java.math.BigInteger;
import java.util.Arrays;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.5-SNAPSHOT.
 */
@SuppressWarnings("rawtypes")
public class CrosschainVerifierTxRoot extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b5060405161118f38038061118f83398101604081905261002f9161007c565b600180546001600160a01b039384166001600160a01b031991821617909155600080549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b6110d1806100be6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634c1ce90214610030575b600080fd5b61004361003e366004610e2e565b610059565b6040516100509190610efe565b60405180910390f35b6040805180820190915260008152606060208201526001546040516303e04ced60e11b8152600481018990526000916001600160a01b0316906307c099da9060240160206040518083038186803b1580156100b357600080fd5b505afa1580156100c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100eb9190610ddc565b9050600061012e87878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102b392505050565b600054815160208301516040808501516060860151608087015160a0880151935163917ede9960e01b81529798506001600160a01b039096169663917ede999661017e9695949091600401610f2b565b60206040518083038186803b15801561019657600080fd5b505afa1580156101aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ce9190610e0c565b50805189146102355760405162461bcd60e51b815260206004820152602860248201527f4576656e74206e6f7420656d697474656420627920657870656374656420626c60448201526737b1b5b1b430b4b760c11b60648201526084015b60405180910390fd5b600061024c6102478360600151610583565b6105d2565b90506000610273826001815181106102665761026661106f565b60200260200101516106b3565b60408051808201909152606060208201526001600160a01b038616815290915061029e858c84610730565b6020830152509b9a5050505050505050505050565b6040805160c08101825260008082526020820181905291810182905260608082018190526080820181905260a0820152906102f061024784610583565b9050600061031461030d836000815181106102665761026661106f565b600061089b565b90506000610338610331846001815181106102665761026661106f565b6014015190565b9050600061035c610355856002815181106102665761026661106f565b6000610901565b90506000610376856003815181106102665761026661106f565b9050600061039d866004815181106103905761039061106f565b60200260200101516105d2565b905060006103b7876005815181106103905761039061106f565b905080518251146104255760405162461bcd60e51b815260206004820152603260248201527f4c656e677468206f662070726f6f664f66667365747320646f6573206e6f742060448201527136b0ba31b4103632b733ba3410383937b7b360711b606482015260840161022c565b6000825167ffffffffffffffff81111561044157610441611085565b60405190808252806020026020018201604052801561046a578160200160208202803683370190505b5090506000825167ffffffffffffffff81111561048957610489611085565b6040519080825280602002602001820160405280156104bc57816020015b60608152602001906001900390816104a75790505b50905060005b8351811015610546576104e361030d8683815181106102665761026661106f565b8382815181106104f5576104f561106f565b6020026020010181815250506105168482815181106102665761026661106f565b8282815181106105285761052861106f565b6020026020010181905250808061053e9061103e565b9150506104c2565b506040805160c0810182529889526001600160a01b0390971660208901529587019490945250506060840152608083015260a08201529392505050565b60408051808201909152600080825260208201528151806105b95750506040805180820190915260008082526020820152919050565b6040805180820190915260209384018152928301525090565b60606105dd82610966565b6105e657600080fd5b60006105f18361098d565b90508067ffffffffffffffff81111561060c5761060c611085565b60405190808252806020026020018201604052801561065157816020015b604080518082019091526000808252602082015281526020019060019003908161062a5790505b509150600061065f84610a1f565b905060005b61066d82610a7a565b156106ab5761067b82610a9e565b84828151811061068d5761068d61106f565b602002602001018190525080806106a39061103e565b915050610664565b505050919050565b60606106be82610af8565b6106c757600080fd5b6000806106d384610b1e565b90925090508067ffffffffffffffff8111156106f1576106f1611085565b6040519080825280601f01601f19166020018201604052801561071b576020820181803683370190505b509250610729828483610bc2565b5050919050565b606080600061074161024785610583565b9050600061075b826003815181106103905761039061106f565b905060005b815181101561083c5760006107808383815181106103905761039061106f565b9050600061079d610331836000815181106102665761026661106f565b90506107b5826001815181106103905761039061106f565b96506107cd826002815181106102665761026661106f565b955060006107f4886000815181106107e7576107e761106f565b6020026020010151610c00565b9050898114801561081657508a6001600160a01b0316826001600160a01b0316145b1561082657505050505050610893565b50505080806108349061103e565b915050610760565b5060405162461bcd60e51b815260206004820152602560248201527f4e6f206576656e7420666f756e6420696e207472616e73616374696f6e20726560448201526418d95a5c1d60da1b606482015260840161022c565b935093915050565b60006108a8826020610ff0565b835110156108f85760405162461bcd60e51b815260206004820152601e60248201527f736c6963696e67206f7574206f662072616e6765202875696e74323536290000604482015260640161022c565b50016020015190565b60008060005b602081101561095e5761091b816008611008565b856109268387610ff0565b815181106109365761093661106f565b01602001516001600160f81b031916901c9190911790806109568161103e565b915050610907565b509392505050565b600081602001516000141561097d57506000919050565b50515160c060009190911a101590565b600061099882610966565b6109a457506000919050565b81518051600090811a91906109b885610c11565b6109c29083610ff0565b9050600060018660200151846109d89190610ff0565b6109e29190611027565b905060005b818311610a15576109f783610c9f565b610a019084610ff0565b925080610a0d8161103e565b9150506109e7565b9695505050505050565b6040805160808101825260009181018281526060820183905281526020810191909152610a4b82610966565b610a5457600080fd5b6000610a5f83610c11565b8351610a6b9190610ff0565b92825250602081019190915290565b80516020810151815160009291610a9091610ff0565b836020015110915050919050565b6040805180820190915260008082526020820152610abb82610a7a565b1561002b5760208201516000610ad082610c9f565b828452602084018190529050610ae68183610ff0565b602085015250610af39050565b919050565b6000816020015160001415610b0f57506000919050565b50515160c060009190911a1090565b600080610b2a83610af8565b610b3357600080fd5b8251805160001a906080821015610b4f57946001945092505050565b60b8821015610b7d5760018560200151610b699190611027565b9250610b76816001610ff0565b9350610bbb565b602085015160b6198301908190610b9690600190611027565b610ba09190611027565b9350610bac8183610ff0565b610bb7906001610ff0565b9450505b5050915091565b6020601f820104836020840160005b83811015610bed57602081028381015190830152600101610bd1565b5050505060008251602001830152505050565b6000610c0b82610d3d565b92915050565b6000816020015160001415610c2857506000919050565b8151805160001a906080821015610c43575060009392505050565b60b8821080610c5e575060c08210158015610c5e575060f882105b15610c6d575060019392505050565b60c0821015610c9457610c8160b783611027565b610c8c906001610ff0565b949350505050565b610c8160f783611027565b8051600090811a6080811015610cb85760019150610d37565b60b8811015610cde57610ccc608082611027565b610cd7906001610ff0565b9150610d37565b60c0811015610d0757600183015160b76020839003016101000a9004810160b519019150610d37565b60f8811015610d1b57610ccc60c082611027565b600183015160f76020839003016101000a9004810160f5190191505b50919050565b6000610d4882610af8565b610d5157600080fd5b600080610d5d84610b1e565b90925090506020811115610d7057600080fd5b80610d7f575060009392505050565b806020036101000a82510492505050919050565b60008083601f840112610da557600080fd5b50813567ffffffffffffffff811115610dbd57600080fd5b602083019150836020828501011115610dd557600080fd5b9250929050565b600060208284031215610dee57600080fd5b81516001600160a01b0381168114610e0557600080fd5b9392505050565b600060208284031215610e1e57600080fd5b81518015158114610e0557600080fd5b60008060008060008060808789031215610e4757600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115610e6d57600080fd5b610e798a838b01610d93565b90965094506060890135915080821115610e9257600080fd5b50610e9f89828a01610d93565b979a9699509497509295939492505050565b6000815180845260005b81811015610ed757602081850181015186830182015201610ebb565b81811115610ee9576000602083870101525b50601f01601f19169290920160200192915050565b602080825282516001600160a01b031682820152820151604080830152600090610c8c6060840182610eb1565b8681526000602060018060a01b0388168184015286604084015260c06060840152610f5960c0840187610eb1565b838103608085015285518082528287019183019060005b81811015610f8c57835183529284019291840191600101610f70565b505084810360a086015285518082528382019250600581901b8201840184880160005b83811015610fdd57601f19858403018652610fcb838351610eb1565b95870195925090860190600101610faf565b50909d9c50505050505050505050505050565b6000821982111561100357611003611059565b500190565b600081600019048311821515161561102257611022611059565b500290565b60008282101561103957611039611059565b500390565b600060001982141561105257611052611059565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ad005cdd93a413829a3ee3c04a7f761e2c959a815ead582df0416a537593f77164736f6c63430008050033";

    public static final String FUNC_DECODEANDVERIFYEVENT = "decodeAndVerifyEvent";

    @Deprecated
    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<EventInfo> decodeAndVerifyEvent(BigInteger _expectedBlockchainId, byte[] _expectedEventSignature, byte[] _signedEventInfo, byte[] param3) {
        final Function function = new Function(FUNC_DECODEANDVERIFYEVENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_expectedBlockchainId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_expectedEventSignature), 
                new org.web3j.abi.datatypes.DynamicBytes(_signedEventInfo), 
                new org.web3j.abi.datatypes.DynamicBytes(param3)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<EventInfo>() {}));
        return executeRemoteCallSingleValueReturn(function, EventInfo.class);
    }

    @Deprecated
    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _registrar, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar), 
                new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _registrar, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar), 
                new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _registrar, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar), 
                new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _registrar, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar), 
                new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class EventInfo extends DynamicStruct {
        public String cbcContract;

        public byte[] eventData;

        public EventInfo(String cbcContract, byte[] eventData) {
            super(new org.web3j.abi.datatypes.Address(cbcContract),new org.web3j.abi.datatypes.DynamicBytes(eventData));
            this.cbcContract = cbcContract;
            this.eventData = eventData;
        }

        public EventInfo(Address cbcContract, DynamicBytes eventData) {
            super(cbcContract,eventData);
            this.cbcContract = cbcContract.getValue();
            this.eventData = eventData.getValue();
        }
    }
}
