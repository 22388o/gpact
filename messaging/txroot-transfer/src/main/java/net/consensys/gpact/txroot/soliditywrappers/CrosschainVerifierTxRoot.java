package net.consensys.gpact.txroot.soliditywrappers;

import java.math.BigInteger;
import java.util.Arrays;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.8.
 */
@SuppressWarnings("rawtypes")
public class CrosschainVerifierTxRoot extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b506040516112fe3803806112fe83398101604081905261002f91610054565b60008054600160a060020a031916600160a060020a0392909216919091179055610084565b60006020828403121561006657600080fd5b8151600160a060020a038116811461007d57600080fd5b9392505050565b61126b806100936000396000f3fe608060405234801561001057600080fd5b5060043610610047577c010000000000000000000000000000000000000000000000000000000060003504634c1ce902811461004c575b600080fd5b61005f61005a366004610f0d565b610061565b005b60006100a283838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061032492505050565b600054815160208301516040808501516060860151608087015160a088015193517f917ede9900000000000000000000000000000000000000000000000000000000815297985073ffffffffffffffffffffffffffffffffffffffff9096169663917ede99966101189695949091600401610fec565b60206040518083038186803b15801561013057600080fd5b505afa158015610144573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016891906110bd565b50805187146101e75760405160e560020a62461bcd02815260206004820152602860248201527f4576656e74206e6f7420656d697474656420627920657870656374656420626c60448201527f6f636b636861696e00000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60006101fe6101f9836060015161060f565b61065e565b9050600061022582600181518110610218576102186110e6565b602002602001015161073f565b9050606061023884602001518a846107bc565b60208087015160405192945060009350610258928e928e91879101611115565b60408051601f198184030181526020601f8c018190048102840181019092528a835292506102a29183918c908c908190840183828082843760009201919091525061095c92505050565b6103175760405160e560020a62461bcd02815260206004820152602c60248201527f4578706563746564206576656e7420646f6573206e6f74206d6174636820657660448201527f656e7420696e2070726f6f66000000000000000000000000000000000000000060648201526084016101de565b5050505050505050505050565b6040805160c08101825260008082526020820181905291810182905260608082018190526080820181905260a0820152906103616101f98461060f565b9050600061038561037e83600081518110610218576102186110e6565b6000610989565b905060006103a96103a284600181518110610218576102186110e6565b6014015190565b905060006103cd6103c685600281518110610218576102186110e6565b60006109f2565b905060006103e785600381518110610218576102186110e6565b9050600061040e86600481518110610401576104016110e6565b602002602001015161065e565b9050600061042887600581518110610401576104016110e6565b905080518251146104a45760405160e560020a62461bcd02815260206004820152603260248201527f4c656e677468206f662070726f6f664f66667365747320646f6573206e6f742060448201527f6d61746368206c656e6774682070726f6f66000000000000000000000000000060648201526084016101de565b6000825167ffffffffffffffff8111156104c0576104c061116e565b6040519080825280602002602001820160405280156104e9578160200160208202803683370190505b5090506000825167ffffffffffffffff8111156105085761050861116e565b60405190808252806020026020018201604052801561053b57816020015b60608152602001906001900390816105265790505b50905060005b83518110156105c55761056261037e868381518110610218576102186110e6565b838281518110610574576105746110e6565b602002602001018181525050610595848281518110610218576102186110e6565b8282815181106105a7576105a76110e6565b602002602001018190525080806105bd906111cc565b915050610541565b506040805160c08101825298895273ffffffffffffffffffffffffffffffffffffffff90971660208901529587019490945250506060840152608083015260a08201529392505050565b60408051808201909152600080825260208201528151806106455750506040805180820190915260008082526020820152919050565b6040805180820190915260209384018152928301525090565b606061066982610a9d565b61067257600080fd5b600061067d83610ac4565b90508067ffffffffffffffff8111156106985761069861116e565b6040519080825280602002602001820160405280156106dd57816020015b60408051808201909152600080825260208201528152602001906001900390816106b65790505b50915060006106eb84610b56565b905060005b6106f982610bb1565b156107375761070782610bd5565b848281518110610719576107196110e6565b6020026020010181905250808061072f906111cc565b9150506106f0565b505050919050565b606061074a82610c2f565b61075357600080fd5b60008061075f84610c55565b90925090508067ffffffffffffffff81111561077d5761077d61116e565b6040519080825280601f01601f1916602001820160405280156107a7576020820181803683370190505b5092506107b5828483610cf9565b5050919050565b60608060006107cd6101f98561060f565b905060006107e782600381518110610401576104016110e6565b905060005b81518110156108e257600061080c838381518110610401576104016110e6565b905060006108296103a283600081518110610218576102186110e6565b905061084182600181518110610401576104016110e6565b965061085982600281518110610218576102186110e6565b9550600061088088600081518110610873576108736110e6565b6020026020010151610d37565b905089811480156108bc57508a73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b156108cc57505050505050610954565b50505080806108da906111cc565b9150506107ec565b5060405160e560020a62461bcd02815260206004820152602560248201527f4e6f206576656e7420666f756e6420696e207472616e73616374696f6e20726560448201527f636569707400000000000000000000000000000000000000000000000000000060648201526084016101de565b935093915050565b6000815183511461096f57506000610983565b818051906020012083805190602001201490505b92915050565b60006109968260206111e7565b835110156109e95760405160e560020a62461bcd02815260206004820152601e60248201527f736c6963696e67206f7574206f662072616e6765202875696e7432353629000060448201526064016101de565b50016020015190565b60008060005b6020811015610a9557610a0c8160086111ff565b85610a1783876111e7565b81518110610a2757610a276110e6565b60209101015160029190910a7f0100000000000000000000000000000000000000000000000000000000000000918290049091027fff000000000000000000000000000000000000000000000000000000000000001604919091179080610a8d816111cc565b9150506109f8565b509392505050565b6000816020015160001415610ab457506000919050565b50515160c060009190911a101590565b6000610acf82610a9d565b610adb57506000919050565b81518051600090811a9190610aef85610d42565b610af990836111e7565b905060006001866020015184610b0f91906111e7565b610b19919061121e565b905060005b818311610b4c57610b2e83610dd0565b610b3890846111e7565b925080610b44816111cc565b915050610b1e565b9695505050505050565b6040805160808101825260009181018281526060820183905281526020810191909152610b8282610a9d565b610b8b57600080fd5b6000610b9683610d42565b8351610ba291906111e7565b92825250602081019190915290565b80516020810151815160009291610bc7916111e7565b836020015110915050919050565b6040805180820190915260008082526020820152610bf282610bb1565b156100475760208201516000610c0782610dd0565b828452602084018190529050610c1d81836111e7565b602085015250610c2a9050565b919050565b6000816020015160001415610c4657506000919050565b50515160c060009190911a1090565b600080610c6183610c2f565b610c6a57600080fd5b8251805160001a906080821015610c8657946001945092505050565b60b8821015610cb45760018560200151610ca0919061121e565b9250610cad8160016111e7565b9350610cf2565b602085015160b6198301908190610ccd9060019061121e565b610cd7919061121e565b9350610ce381836111e7565b610cee9060016111e7565b9450505b5050915091565b6020601f820104836020840160005b83811015610d2457602081028381015190830152600101610d08565b5050505060008251602001830152505050565b600061098382610e6e565b6000816020015160001415610d5957506000919050565b8151805160001a906080821015610d74575060009392505050565b60b8821080610d8f575060c08210158015610d8f575060f882105b15610d9e575060019392505050565b60c0821015610dc557610db260b78361121e565b610dbd9060016111e7565b949350505050565b610db260f78361121e565b8051600090811a6080811015610de95760019150610e68565b60b8811015610e0f57610dfd60808261121e565b610e089060016111e7565b9150610e68565b60c0811015610e3857600183015160b76020839003016101000a9004810160b519019150610e68565b60f8811015610e4c57610dfd60c08261121e565b600183015160f76020839003016101000a9004810160f5190191505b50919050565b6000610e7982610c2f565b610e8257600080fd5b600080610e8e84610c55565b90925090506020811115610ea157600080fd5b80610eb0575060009392505050565b806020036101000a82510492505050919050565b60008083601f840112610ed657600080fd5b50813567ffffffffffffffff811115610eee57600080fd5b602083019150836020828501011115610f0657600080fd5b9250929050565b60008060008060008060808789031215610f2657600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115610f4c57600080fd5b610f588a838b01610ec4565b90965094506060890135915080821115610f7157600080fd5b50610f7e89828a01610ec4565b979a9699509497509295939492505050565b60005b83811015610fab578181015183820152602001610f93565b83811115610fba576000848401525b50505050565b60008151808452610fd8816020860160208601610f90565b601f01601f19169290920160200192915050565b8681526000602073ffffffffffffffffffffffffffffffffffffffff88168184015286604084015260c0606084015261102860c0840187610fc0565b838103608085015285518082528287019183019060005b8181101561105b5783518352928401929184019160010161103f565b505084810360a0860152855180825283820192508381028201840184880160005b838110156110aa57601f19858403018652611098838351610fc0565b9587019592509086019060010161107c565b50909d9c50505050505050505050505050565b6000602082840312156110cf57600080fd5b815180151581146110df57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8481526c0100000000000000000000000073ffffffffffffffffffffffffffffffffffffffff85160260208201528260348201526000825161115e816054850160208701610f90565b9190910160540195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198214156111e0576111e061119d565b5060010190565b600082198211156111fa576111fa61119d565b500190565b60008160001904831182151516156112195761121961119d565b500290565b6000828210156112305761123061119d565b50039056fea2646970667358221220e8e934a608226e1b3703dfff8012dd86e1c7dfa81abedc9a50d1bb228786015464736f6c63430008090033";

    public static final String FUNC_DECODEANDVERIFYEVENT = "decodeAndVerifyEvent";

    @Deprecated
    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CrosschainVerifierTxRoot(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    @Deprecated
    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CrosschainVerifierTxRoot load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CrosschainVerifierTxRoot(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainVerifierTxRoot> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _txReceiptRootStorage) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _txReceiptRootStorage)));
        return deployRemoteCall(CrosschainVerifierTxRoot.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
