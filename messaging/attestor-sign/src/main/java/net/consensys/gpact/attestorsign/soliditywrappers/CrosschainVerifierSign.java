package net.consensys.gpact.attestorsign.soliditywrappers;

import java.math.BigInteger;
import java.util.Arrays;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.8.
 */
@SuppressWarnings("rawtypes")
public class CrosschainVerifierSign extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50604051610ad7380380610ad783398101604081905261002f91610054565b60008054600160a060020a031916600160a060020a0392909216919091179055610084565b60006020828403121561006657600080fd5b8151600160a060020a038116811461007d57600080fd5b9392505050565b610a44806100936000396000f3fe608060405234801561001057600080fd5b5060043610610047577c010000000000000000000000000000000000000000000000000000000060003504634c1ce902811461004c575b600080fd5b61005f61005a366004610734565b610061565b005b60608060608060006100a887878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610538915050565b90506100bb605563ffffffff83166107e6565b6100c6906004610805565b8614610133576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f5369676e617475726520696e636f7272656374206c656e67746800000000000060448201526064015b60405180910390fd5b8063ffffffff1667ffffffffffffffff8111156101525761015261081d565b60405190808252806020026020018201604052801561017b578160200160208202803683370190505b5094508063ffffffff1667ffffffffffffffff81111561019d5761019d61081d565b6040519080825280602002602001820160405280156101c6578160200160208202803683370190505b5093508063ffffffff1667ffffffffffffffff8111156101e8576101e861081d565b604051908082528060200260200182016040528015610211578160200160208202803683370190505b5092508063ffffffff1667ffffffffffffffff8111156102335761023361081d565b60405190808252806020026020018201604052801561025c578160200160208202803683370190505b509150600460005b8263ffffffff16811015610457576102b389898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508692506105b8915050565b8782815181106102c5576102c561084c565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101526102f5601483610805565b915061033889898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508692506105c0915050565b86828151811061034a5761034a61084c565b6020026020010181815250506020826103639190610805565b91506103a689898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508692506105c0915050565b8582815181106103b8576103b861084c565b6020026020010181815250506020826103d19190610805565b915061041489898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086925061066b915050565b8482815181106104265761042661084c565b60ff90921660209283029190910190910152610443600183610805565b91508061044f8161087b565b915050610264565b50505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ea13ec8b8b868686868e8e6040518863ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104db979695949392919061092d565b60206040518083038186803b1580156104f357600080fd5b505afa158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b91906109e5565b5050505050505050505050565b6000610545826004610805565b835110156105af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f736c6963696e67206f7574206f662072616e6765202875696e74333229000000604482015260640161012a565b50016004015190565b016014015190565b60008060005b6020811015610663576105da8160086107e6565b856105e58387610805565b815181106105f5576105f561084c565b60209101015160029190910a7f0100000000000000000000000000000000000000000000000000000000000000918290049091027fff00000000000000000000000000000000000000000000000000000000000000160491909117908061065b8161087b565b9150506105c6565b509392505050565b6000610678826001610805565b835110156106e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f736c6963696e67206f7574206f662072616e6765202875696e74382900000000604482015260640161012a565b50016001015190565b60008083601f8401126106fd57600080fd5b50813567ffffffffffffffff81111561071557600080fd5b60208301915083602082850101111561072d57600080fd5b9250929050565b6000806000806000806080878903121561074d57600080fd5b8635955060208701359450604087013567ffffffffffffffff8082111561077357600080fd5b61077f8a838b016106eb565b9096509450606089013591508082111561079857600080fd5b506107a589828a016106eb565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000816000190483118215151615610800576108006107b7565b500290565b60008219821115610818576108186107b7565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060001982141561088f5761088f6107b7565b5060010190565b600081518084526020808501945080840160005b838110156108c6578151875295820195908201906001016108aa565b509495945050505050565b600081518084526020808501945080840160005b838110156108c657815160ff16875295820195908201906001016108e5565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060c08201898352602060c081850152818a5180845260e086019150828c01935060005b8181101561098457845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101610952565b50508481036040860152610998818b610896565b9250505082810360608401526109ae8188610896565b905082810360808401526109c281876108d1565b905082810360a08401526109d7818587610904565b9a9950505050505050505050565b6000602082840312156109f757600080fd5b81518015158114610a0757600080fd5b939250505056fea26469706673582212208d93ad44c56147a72b0b872618ccc824dbf61cd3d1387542687c9ca817c8775064736f6c63430008090033";

    public static final String FUNC_DECODEANDVERIFYEVENT = "decodeAndVerifyEvent";

    @Deprecated
    protected CrosschainVerifierSign(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CrosschainVerifierSign(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CrosschainVerifierSign(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CrosschainVerifierSign(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    @Deprecated
    public static CrosschainVerifierSign load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainVerifierSign(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CrosschainVerifierSign load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CrosschainVerifierSign(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CrosschainVerifierSign load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CrosschainVerifierSign(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CrosschainVerifierSign load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CrosschainVerifierSign(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CrosschainVerifierSign> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _registrar) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar)));
        return deployRemoteCall(CrosschainVerifierSign.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<CrosschainVerifierSign> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _registrar) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar)));
        return deployRemoteCall(CrosschainVerifierSign.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainVerifierSign> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _registrar) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar)));
        return deployRemoteCall(CrosschainVerifierSign.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<CrosschainVerifierSign> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _registrar) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _registrar)));
        return deployRemoteCall(CrosschainVerifierSign.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
